
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/02b_segment_features.ipynb

from xview2comp.nb_01b import *
from fastai.vision import *
from fastai.utils.collect_env import *

class SegLabelListCustom(SegmentationLabelList):
    def open(self, fn): return open_mask(fn)

class SegItemListCustom(ImageList):
    _label_cls = SegLabelListCustom

def get_random_val_idx(n, val_pct=.1):
    return np.random.permutation(n)[:int(val_pct * n)]

def dice_loss(input, target):
#     pdb.set_trace()
    smooth = 1.
    input = input[:,1,None].sigmoid()
    iflat = input.contiguous().view(-1).float()
    tflat = target.view(-1).float()
    intersection = (iflat * tflat).sum()
    return (1 - ((2. * intersection + smooth) / ((iflat + tflat).sum() +smooth)))

def combo_loss(pred, targ):
    bce_loss = CrossEntropyFlat(axis=1)
    return bce_loss(pred,targ) + dice_loss(pred,targ)


def pred2mask(pred):
    return (pred[:,1,None].sigmoid() > .95).long()