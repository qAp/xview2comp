
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/01_load_data.ipynb

Path.ls = lambda o: list(o.iterdir())

def pre_img_fpaths(ns): return [n for n in ns if '_pre_' in str(n) and n.suffix=='.png']

def pre2post_fpath(o:Path): return Path(str(o).replace('_pre_', '_post_'))

def img2label_fpath(o:Path):
    return Path(str(o).replace('images/', 'labels/').replace('.png', '.json'))

def polys2mask(ps:list, sz=(1024, 1024)):
    '''Convert a list of shapely polygons to a binary mask. '''
    ps = [shapely.geometry.mapping(p) for p in ps]
    ps = [np.array(p['coordinates'][0], dtype=np.int32) for p in ps]
    ps = np.array(ps)

    img0 = np.zeros(sz, dtype=np.uint8)
    mask = cv2.fillPoly(img0, ps, (1,))
    mask[mask > 1] = 0
    return mask

def save_mask(m, fn): PIL.Image.fromarray(m).save(fn)
def load_mask(fn): return np.array(PIL.Image.open(fn))